class Node {
    int a;
    Node next;

    public Node(int data) {
        this.a = data;
        this.next = null;
    }
}

class LinkedList {
    private Node b;

    public LinkedList() {
        this.b = null;
    }

    public void add(int data) {
        Node newNode = new Node(data);
        if (b == null) {
            b = newNode;
        } else {
            Node current = b;
            while (current.next != null) {
                current = current.next;
            }
            current.next = newNode;
        }
    }

    public int get(int index) {
        if (index < 0 || index >= size()) {
            throw new IndexOutOfBoundsException();
        }

        Node current = b;
        for (int i = 0; i < index; i++) {
            current = current.next;
        }
        return current.a;
    }

    public void remove(int index) {
        if (index < 0 || index >= size()) {
            throw new IndexOutOfBoundsException();
        }

        if (index == 0) {
            b = b.next;
        } else {
            Node prev = null;
            Node current = b;
            for (int i = 0; i < index; i++) {
                prev = current;
                current = current.next;
            }
            prev.next = current.next;
        }
    }

    public int size() {
        int count = 0;
        Node current = b;
        while (current != null) {
            count++;
            current = current.next;

        }
        return count;
    }
}


public class Main {
    public static void main(String[] args) {
        LinkedList list = new LinkedList();
        list.add(5);
        list.add(10);
        list.add(10);
        System.out.println(list.size());
        System.out.println(list.get(1));
        list.remove(0);
        System.out.println( list.size());
        System.out.println( list.get(0));
    }
}
